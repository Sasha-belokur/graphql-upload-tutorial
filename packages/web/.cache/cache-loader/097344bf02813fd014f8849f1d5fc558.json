{"remainingRequest":"/home/alexandr/projects/graphql-upload-tutorial/node_modules/ts-loader/index.js??ref--16-1!/home/alexandr/projects/graphql-upload-tutorial/packages/web/src/App.tsx","dependencies":[{"path":"/home/alexandr/projects/graphql-upload-tutorial/packages/web/src/App.tsx","mtime":1553508385535},{"path":"/home/alexandr/projects/graphql-upload-tutorial/node_modules/cache-loader/dist/cjs.js","mtime":1553084366582},{"path":"/home/alexandr/projects/graphql-upload-tutorial/node_modules/ts-loader/index.js","mtime":1553084367278}],"contextDependencies":[],"result":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _this = this;\nimport { gql } from 'apollo-boost';\nimport * as React from 'react';\nimport { Mutation } from 'react-apollo';\nimport Dropzone from 'react-dropzone';\nvar dropzoneStyle = {\n    width: 200,\n    height: 250,\n    border: '3px dashed #000000',\n    textAlign: 'center'\n};\nvar UPLOAD_FILES = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  mutation uploadFiles($files: [Upload]!) {\\n    uploadFiles(files: $files) {\\n      name\\n      path\\n      type\\n    }\\n  }\\n\"], [\"\\n  mutation uploadFiles($files: [Upload]!) {\\n    uploadFiles(files: $files) {\\n      name\\n      path\\n      type\\n    }\\n  }\\n\"])));\nvar App = function () {\n    return (React.createElement(Mutation, { mutation: UPLOAD_FILES }, function (uploadFiles) { return (React.createElement(Dropzone, { onDrop: function (files) { return __awaiter(_this, void 0, void 0, function () {\n            var uploads;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, uploadFiles({ variables: { files: files } })];\n                    case 1:\n                        uploads = (_a.sent()).data.uploadFiles;\n                        console.log(uploads);\n                        return [2];\n                }\n            });\n        }); } }, function (_a) {\n        var getRootProps = _a.getRootProps, getInputProps = _a.getInputProps, isDragActive = _a.isDragActive;\n        return (React.createElement(\"section\", null,\n            React.createElement(\"div\", __assign({}, getRootProps(), { style: dropzoneStyle }),\n                React.createElement(\"input\", __assign({}, getInputProps())),\n                React.createElement(\"p\", null, isDragActive ? \"Drop it like it's hot!\" : 'Click me or drag a file to upload!'))));\n    })); }));\n};\nexport default App;\nvar templateObject_1;\n",{"version":3,"file":"/home/alexandr/projects/graphql-upload-tutorial/packages/web/src/App.tsx","sourceRoot":"","sources":["/home/alexandr/projects/graphql-upload-tutorial/packages/web/src/App.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iBA6CA;AA7CA,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;AACnC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AAEtC,IAAM,aAAa,GAAG;IACpB,KAAK,EAAE,GAAG;IACV,MAAM,EAAE,GAAG;IACX,MAAM,EAAE,oBAAoB;IAC5B,SAAS,EAAE,QAAQ;CACpB,CAAC;AAEF,IAAM,YAAY,GAAG,GAAG,sMAAA,mIAQvB,IAAA,CAAA;AAED,IAAM,GAAG,GAAG;IACV,OAAO,CACL,oBAAC,QAAQ,IAAC,QAAQ,EAAE,YAAY,IAC7B,UAAA,WAAW,IAAI,OAAA,CACd,oBAAC,QAAQ,IAAC,MAAM,EAAE,UAAM,KAAK;;;;4BACgB,WAAM,WAAW,CAAC,EAAE,SAAS,EAAE,EAAE,KAAK,OAAA,EAAE,EAAE,CAAC,EAAA;;wBAAxD,OAAO,GAAM,CAAA,SAA2C,CAAA,iBAAjD;wBACrC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;;;aACtB,IACE,UAAC,EAA6C;YAA3C,8BAAY,EAAE,gCAAa,EAAE,8BAAY;QAAO,OAAA,CAClD;YACE,wCAAS,YAAY,EAAE,IAAE,KAAK,EAAE,aAAa;gBAC3C,0CAAW,aAAa,EAAE,EAAI;gBAC9B,+BAAI,YAAY,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,oCAAoC,CAAK,CACnF,CACE,CACX;IAPmD,CAOnD,CACQ,CACZ,EAde,CAcf,CACQ,CACZ,CAAA;AACH,CAAC,CAAC;AAEF,eAAe,GAAG,CAAC","sourcesContent":["import { gql } from 'apollo-boost';\nimport * as React from 'react';\nimport { Mutation } from 'react-apollo';\nimport Dropzone from 'react-dropzone';\n\nconst dropzoneStyle = {\n  width: 200,\n  height: 250,\n  border: '3px dashed #000000',\n  textAlign: 'center'\n};\n\nconst UPLOAD_FILES = gql`\n  mutation uploadFiles($files: [Upload]!) {\n    uploadFiles(files: $files) {\n      name\n      path\n      type\n    }\n  }\n`\n\nconst App = () => {\n  return (\n    <Mutation mutation={UPLOAD_FILES}>\n      {uploadFiles => (\n        <Dropzone onDrop={async files => {\n          const { data : { uploadFiles: uploads }} = await uploadFiles({ variables: { files } });\n          console.log(uploads);\n        }}>\n          {({ getRootProps, getInputProps, isDragActive }) => (\n            <section>\n              <div {...getRootProps()} style={dropzoneStyle}>\n                <input {...getInputProps()} />\n                <p>{isDragActive ? \"Drop it like it's hot!\" : 'Click me or drag a file to upload!'}</p>\n              </div>\n            </section>\n          )}\n        </Dropzone>\n      )}\n    </Mutation>\n  )\n};\n\nexport default App;\n"]}]}